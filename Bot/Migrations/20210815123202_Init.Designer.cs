// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RatingsBot.Data;

namespace RatingsBot.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210815123202_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasPostgresExtension("uuid-ossp")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("RatingsBot.Models.BaseEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BaseEntity");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BaseEntity");
                });

            modelBuilder.Entity("RatingsBot.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RatingsBot.Models.Category", b =>
                {
                    b.HasBaseType("RatingsBot.Models.BaseEntity");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("Category");
                });

            modelBuilder.Entity("RatingsBot.Models.Item", b =>
                {
                    b.HasBaseType("RatingsBot.Models.BaseEntity");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("CategoryId1")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("Item_Name");

                    b.HasIndex("CategoryId1");

                    b.HasDiscriminator().HasValue("Item");
                });

            modelBuilder.Entity("RatingsBot.Models.Rating", b =>
                {
                    b.HasBaseType("RatingsBot.Models.BaseEntity");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<string>("ItemId1")
                        .HasColumnType("text");

                    b.Property<long>("UsedId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.HasIndex("ItemId1");

                    b.HasIndex("UserId");

                    b.HasDiscriminator().HasValue("Rating");
                });

            modelBuilder.Entity("RatingsBot.Models.Item", b =>
                {
                    b.HasOne("RatingsBot.Models.Category", "Category")
                        .WithMany("Items")
                        .HasForeignKey("CategoryId1");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("RatingsBot.Models.Rating", b =>
                {
                    b.HasOne("RatingsBot.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId1");

                    b.HasOne("RatingsBot.Models.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserId");

                    b.Navigation("Item");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RatingsBot.Models.User", b =>
                {
                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("RatingsBot.Models.Category", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
